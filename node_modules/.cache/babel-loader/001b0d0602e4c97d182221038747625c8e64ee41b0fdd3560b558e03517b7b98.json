{"ast":null,"code":"var _jsxFileName = \"/home/sdj81/ReactWorkspace/react_demo/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport './MyCustomShit.css'; /* Even though this exists in a different direcotry\n                             it gets referenced just the same */\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n/* Create root element that will render my JS modules in index.html */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n/* Custom HTML element */\nconst myFirstElement = /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \"A demo element\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 24\n}, this);\n\n/* Ayyy OOP! But in JS! */\nclass Guy {\n  constructor(name) {\n    this.pfpURL = \"%PUBLIC_URL%/images/and-den-im-GETTIN_MAD.png\";\n    this.brand = name; /* Yes. Joe is a brand. */\n  }\n  name() {\n    return \"My name is \" + this.brand;\n  }\n  pfp() {\n    return this.pfpURL;\n  }\n}\n\n// {joe.brand} is how I can insert JS data into HTML elements\n// CSS shit I use here\nfunction Header() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Author-Bits\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"I am a header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"I am a React element declared in \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/index.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 54\n        }, this), \" and inserted into the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"root.render()\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 102\n        }, this), \" directly\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Check me out, I'm calling Joe's brand: \", joe.name()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"And this is Joe's pfp:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: joe.pfp()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 49\n        }, this), \"... that, I guess, doesn't load\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Header;\nconst joe = new Guy(\"Joe\"); /* JS class declaration. Nothing new */\n\nroot.render(myFirstElement); /* Rendering my custom HTML header */\n/* Pre-packaged app from Facebook when starting a new project */\n// I customized some things like replacing the spinning icon, and changing background and text colors\n// Apparently I can't enter text into the element renders\n// notice: that the latest `root.render` call is what loads\n// also notice: HTML elements that are capitalized are React components\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 61,\n  columnNumber: 3\n}, this));\n\n// ### TODO\n// - Figure out how to include the JumpStart html\n//   - Either port the HTML over to a React app, use react app and integrate it\n//     into HTML, or what, just DO IT\n// \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","Fragment","_Fragment","root","createRoot","document","getElementById","myFirstElement","children","fileName","_jsxFileName","lineNumber","columnNumber","Guy","constructor","name","pfpURL","brand","pfp","Header","className","joe","src","_c","render","StrictMode","$RefreshReg$"],"sources":["/home/sdj81/ReactWorkspace/react_demo/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport './MyCustomShit.css'; /* Even though this exists in a different direcotry\nit gets referenced just the same */\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n/* Create root element that will render my JS modules in index.html */\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n/* Custom HTML element */\nconst myFirstElement = <h1>A demo element</h1>\n\n/* Ayyy OOP! But in JS! */\nclass Guy {\n    pfpURL = \"%PUBLIC_URL%/images/and-den-im-GETTIN_MAD.png\";\n    constructor(name) {\n        this.brand = name; /* Yes. Joe is a brand. */\n    }\n    name() {\n        return \"My name is \" + this.brand;\n    }\n    pfp() {\n        return this.pfpURL;\n    }\n}\n\n// {joe.brand} is how I can insert JS data into HTML elements\n// CSS shit I use here\nfunction Header() {\n    return(\n        <>\n            <div className=\"Author-Bits\">\n                <h1>I am a header</h1>\n                <p>\n                    I am a React element declared in <code>src/index.js</code> and inserted into the <code>root.render()</code> directly\n                </p>\n                <p>\n                    Check me out, I'm calling Joe's brand: {joe.name()}\n                </p>\n                <p>\n                    And this is Joe's pfp:<br/>\n                    <img src={joe.pfp()}></img> <br/>\n                    ... that, I guess, doesn't load\n                </p>\n            </div>\n        </>\n    )\n}\n\nconst joe = new Guy(\"Joe\"); /* JS class declaration. Nothing new */\n\nroot.render(myFirstElement); /* Rendering my custom HTML header */ \n/* Pre-packaged app from Facebook when starting a new project */\n// I customized some things like replacing the spinning icon, and changing background and text colors\n// Apparently I can't enter text into the element renders\n// notice: that the latest `root.render` call is what loads\n// also notice: HTML elements that are capitalized are React components\nroot.render(\n  <React.StrictMode>\n    <Header />\n    <App />\n  </React.StrictMode>\n);\n\n// ### TODO\n// - Figure out how to include the JumpStart html\n//   - Either port the HTML over to a React app, use react app and integrate it\n//     into HTML, or what, just DO IT\n// \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}