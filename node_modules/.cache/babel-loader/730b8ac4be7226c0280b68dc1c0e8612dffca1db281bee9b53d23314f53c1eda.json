{"ast":null,"code":"var _jsxFileName = \"/home/sdj81/ReactWorkspace/react_demo/src/App.js\";\nimport logo from './images/uno_O.png';\nimport Todo from './TODO.js';\nimport './App.css';\nimport './MyCustom.css';\n\n/* Me playing around with a react elemnt */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isClicked = false; /* Globally declaring boolean so all functions can view it */\n/* FIX: Button feature STILL DOESNT WORK */\n\n/*\n * NOTE:\n * - Hooks\n *   1. can ONLY be called in React function components\n *   2. can ONLY be called @ top level of said component\n *   3. can NOT be conditional\n */\n\n// Class component can be used to create custom React elements that inheriet \n// the React Component interface and respective functions\n// Much more complex, but I think it'S worth exploring. TODO?\n//\n// Could be how we manage posts appearing for searches, with individual posts\n// their own class component\n// ...or just develop multiple functions with properties and classes for the data\n// FE post\n\n// class Item extends React.Component { /* For some reason, the React.Component\n// isn't recognized... */\n//     render() {\n//         return <h3> I'm a class component!</h3>;\n//     }\n// }\n// Rendered like a function element in HTML\n//  root.render(<Item />)\n\n// passing a component to a function as a \"prop\". Treated as arguments, but passed to the component as attributes\n// Think of them like HTML element attributes\nfunction PropsToYou(props) {\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: [\"I am the color \", /*#__PURE__*/_jsxDEV(\"em\", {\n      style: {\n        color: props.green\n      },\n      children: props.color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 31\n    }, this), \" passed via properties!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n}\n\n/* I'm displayed if a button is clicked. Which one? Figure yout yourself ;) */\n_c = PropsToYou;\nfunction Confirmed() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Confirmed\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You clicked the button!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n/* I'm displayed waiting for the button is clicked. */\n_c2 = Confirmed;\nfunction Waiting() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"waiting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n/* my contents changed if a button is clicked */\n_c3 = Waiting;\nfunction ConditionalTest() {\n  /* But I can also use the ? operator inside JSX elements too */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isClicked ? /*#__PURE__*/_jsxDEV(Confirmed, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Waiting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n// Can use conditionals to display things conditionally\n_c4 = ConditionalTest;\nfunction App() {\n  /* Cannot define components inside other components */\n  let content;\n\n  // Using an arrow function to handle a React event that is clicking a button\n  const toggle = a => {\n    alert(a);\n    if (isClicked) {\n      isClicked = false;\n    } else {\n      isClicked = true;\n    }\n  };\n\n  /* I can use conditionals to load different elements! */\n  if (isClicked) {\n    content = /*#__PURE__*/_jsxDEV(Confirmed, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }, this);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(Waiting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      className: \"AppContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to JumpStart!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"It does nothing right now. Enjoy this spinning icon!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Todo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PropsToYou, {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Here's me demoing a conditional by using a JS insert and logical AND. I guess it prints the output of isClicked when not displaying \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Confirmed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 152\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isClicked && /*#__PURE__*/_jsxDEV(Confirmed, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"And here's me using element \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"ConditionalTest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 48\n        }, this), \" to show off ternary operators\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ConditionalTest, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"And here's using a variable \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 48\n        }, this), \" assigned to an element based on a conditional defined earlier.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), content, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"All of thse examples suck and are buggy. The first one does actually toggle, but then breaks after reloading the page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n// I can only call functions declared here IN here. If I try importing any outside the one function designated to be exported, it treats that as if I just call the exported function again.\n_c5 = App;\nexport default App; /* Only ONE can be exported */\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"PropsToYou\");\n$RefreshReg$(_c2, \"Confirmed\");\n$RefreshReg$(_c3, \"Waiting\");\n$RefreshReg$(_c4, \"ConditionalTest\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["logo","Todo","jsxDEV","_jsxDEV","Fragment","_Fragment","isClicked","PropsToYou","props","children","style","color","green","fileName","_jsxFileName","lineNumber","columnNumber","_c","Confirmed","className","_c2","Waiting","_c3","ConditionalTest","_c4","App","content","toggle","a","alert","src","alt","_c5","$RefreshReg$"],"sources":["/home/sdj81/ReactWorkspace/react_demo/src/App.js"],"sourcesContent":["import logo from './images/uno_O.png';\nimport Todo from './TODO.js';\nimport './App.css';\nimport './MyCustom.css';\n\n/* Me playing around with a react elemnt */\n\nlet isClicked = false; /* Globally declaring boolean so all functions can view it */\n/* FIX: Button feature STILL DOESNT WORK */\n\n/*\n * NOTE:\n * - Hooks\n *   1. can ONLY be called in React function components\n *   2. can ONLY be called @ top level of said component\n *   3. can NOT be conditional\n */\n\n\n\n// Class component can be used to create custom React elements that inheriet \n// the React Component interface and respective functions\n// Much more complex, but I think it'S worth exploring. TODO?\n//\n// Could be how we manage posts appearing for searches, with individual posts\n// their own class component\n// ...or just develop multiple functions with properties and classes for the data\n// FE post\n\n// class Item extends React.Component { /* For some reason, the React.Component\n// isn't recognized... */\n//     render() {\n//         return <h3> I'm a class component!</h3>;\n//     }\n// }\n// Rendered like a function element in HTML\n//  root.render(<Item />)\n\n// passing a component to a function as a \"prop\". Treated as arguments, but passed to the component as attributes\n// Think of them like HTML element attributes\nfunction PropsToYou(props) {\n    return <h3>I am the color <em style={{color: props.green }}>{props.color}</em> passed via properties!</h3>\n}\n\n/* I'm displayed if a button is clicked. Which one? Figure yout yourself ;) */\nfunction Confirmed() {\n    return (\n        <>\n            <div className=\"Confirmed\">\n                <h2>You clicked the button!</h2>\n            </div>\n        </>\n    )\n}\n\n/* I'm displayed waiting for the button is clicked. */\nfunction Waiting() {\n    return (\n        <>\n            <p>waiting...</p>\n        </>\n    )\n}\n\n/* my contents changed if a button is clicked */\nfunction ConditionalTest() {\n    /* But I can also use the ? operator inside JSX elements too */\n    return (\n        <div>\n            {isClicked ? (\n                <Confirmed />\n            ) : (\n                    <Waiting />\n                )\n            }\n        </div>\n    )\n}\n\n// Can use conditionals to display things conditionally\n\n\n\nfunction App() {\n    /* Cannot define components inside other components */\n    let content;\n\n   // Using an arrow function to handle a React event that is clicking a button\n    const toggle = (a) => {\n        alert(a);\n        if (isClicked) {\n            isClicked = false;\n        } else {\n            isClicked = true;\n        }\n    }\n\n    /* I can use conditionals to load different elements! */\n    if (isClicked) {\n        content = <Confirmed />\n    } else {\n        content = <Waiting />\n    }\n\n    return (\n        <div className=\"App\">\n\n            <body className=\"AppContent\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n                <h1>Welcome to JumpStart!</h1>\n\n                <p>\n                    It does nothing right now. Enjoy this spinning icon!\n                </p>\n\n                <Todo />\n                \n                <PropsToYou color=\"green\" />\n\n                <p>Here's me demoing a conditional by using a JS insert and logical AND. I guess it prints the output of isClicked when not displaying <code>Confirmed</code>.</p>\n                <div>\n                    {isClicked && <Confirmed />}\n                </div>\n\n                <p>And here's me using element <code>ConditionalTest</code> to show off ternary operators</p>\n                <ConditionalTest />\n\n                <p>And here's using a variable <code>content</code> assigned to an element based on a conditional defined earlier.</p>\n\n                {content}\n\n                <p>All of thse examples suck and are buggy. The first one does actually toggle, but then breaks after reloading the page</p>\n            </body>\n        </div>\n    );\n}\n\n// I can only call functions declared here IN here. If I try importing any outside the one function designated to be exported, it treats that as if I just call the exported function again.\nexport default App; /* Only ONE can be exported */\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}