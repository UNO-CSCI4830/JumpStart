{"ast":null,"code":"var _jsxFileName = \"/home/sdj81/ReactWorkspace/react_demo/src/utils.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Class component can be used to create custom React elements that inheriet \n// the React Component interface and respective functions\n// Much more complex, but I think it'S worth exploring. TODO?\n//\n// Could be how we manage posts appearing for searches, with individual posts\n// their own class component\n// ...or just develop multiple functions with properties and classes for the data\n// FE post\n\n// class Item extends React.Component { /* For some reason, the React.Component\n// isn't recognized... */\n//     render() {\n//         return <h3> I'm a class component!</h3>;\n//     }\n// }\n// Rendered like a function element in HTML\n//  root.render(<Item />)\n\n/* passing a component to a function as a \"prop\". Treated as arguments, \n * but passed to the component as attributes\n * Think of them like HTML element attributes\n */\nexport function PropsToYou(props) {\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: [\"I am the color \", /*#__PURE__*/_jsxDEV(\"em\", {\n      style: {\n        color: props.color\n      },\n      children: props.color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 31\n    }, this), \" passed via properties!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n}\n\n/* I'm displayed if a button is clicked. Which one? Figure yout yourself ;) */\n_c = PropsToYou;\nexport function Confirmed() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Confirmed\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You clicked the button!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n/* I'm displayed waiting for the button is clicked. */\n_c2 = Confirmed;\nexport function Waiting() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"waiting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c3 = Waiting;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PropsToYou\");\n$RefreshReg$(_c2, \"Confirmed\");\n$RefreshReg$(_c3, \"Waiting\");","map":{"version":3,"names":["PropsToYou","props","_jsxDEV","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","Confirmed","_Fragment","className","_c2","Waiting","_c3","$RefreshReg$"],"sources":["/home/sdj81/ReactWorkspace/react_demo/src/utils.js"],"sourcesContent":["// Class component can be used to create custom React elements that inheriet \n// the React Component interface and respective functions\n// Much more complex, but I think it'S worth exploring. TODO?\n//\n// Could be how we manage posts appearing for searches, with individual posts\n// their own class component\n// ...or just develop multiple functions with properties and classes for the data\n// FE post\n\n// class Item extends React.Component { /* For some reason, the React.Component\n// isn't recognized... */\n//     render() {\n//         return <h3> I'm a class component!</h3>;\n//     }\n// }\n// Rendered like a function element in HTML\n//  root.render(<Item />)\n\n/* passing a component to a function as a \"prop\". Treated as arguments, \n * but passed to the component as attributes\n * Think of them like HTML element attributes\n */\nexport function PropsToYou(props) {\n    return <h3>I am the color <em style={{color: props.color}}>{props.color}</em> passed via properties!</h3>\n}\n\n/* I'm displayed if a button is clicked. Which one? Figure yout yourself ;) */\nexport function Confirmed() {\n    return (\n        <>\n            <div className=\"Confirmed\">\n                <h2>You clicked the button!</h2>\n            </div>\n        </>\n    )\n}\n\n/* I'm displayed waiting for the button is clicked. */\nexport function Waiting() {\n    return (\n        <>\n            <p>waiting...</p>\n        </>\n    )\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAUA,CAACC,KAAK,EAAE;EAC9B,oBAAOC,OAAA;IAAAC,QAAA,GAAI,iBAAe,eAAAD,OAAA;MAAIE,KAAK,EAAE;QAACC,KAAK,EAAEJ,KAAK,CAACI;MAAK,CAAE;MAAAF,QAAA,EAAEF,KAAK,CAACI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,2BAAuB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC7G;;AAEA;AAAAC,EAAA,GAJgBV,UAAU;AAK1B,OAAO,SAASW,SAASA,CAAA,EAAG;EACxB,oBACIT,OAAA,CAAAU,SAAA;IAAAT,QAAA,eACID,OAAA;MAAKW,SAAS,EAAC,WAAW;MAAAV,QAAA,eACtBD,OAAA;QAAAC,QAAA,EAAI;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B;EAAC,gBACR,CAAC;AAEX;;AAEA;AAAAK,GAAA,GAVgBH,SAAS;AAWzB,OAAO,SAASI,OAAOA,CAAA,EAAG;EACtB,oBACIb,OAAA,CAAAU,SAAA;IAAAT,QAAA,eACID,OAAA;MAAAC,QAAA,EAAG;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC,gBACnB,CAAC;AAEX;AAACO,GAAA,GANeD,OAAO;AAAA,IAAAL,EAAA,EAAAI,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}