{"ast":null,"code":"var _jsxFileName = \"/home/sdj81/ReactWorkspace/react_demo/src/App.js\";\nimport logo from './images/uno_O.png';\nimport './App.css';\nimport './MyCustom.css';\n\n/* Me playing around with a react elemnt */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isClicked = false; /* Globally declaring boolean so all functions can view it */\n/* FIX: Button feature STILL DOESNT WORK */\n\n/*\n * NOTE:\n * - Hooks\n *   1. can ONLY be called in React function components\n *   2. can ONLY be called @ top level of said component\n *   3. can NOT be conditional\n */\n\n// Class component can be used to create custom React elements that inheriet \n// the React Component interface and respective functions\n// Much more complex, but I think it'S worth exploring. TODO?\n//\n// Could be how we manage posts appearing for searches, with individual posts\n// their own class component\n// ...or just develop multiple functions with properties and classes for the data\n// FE post\n\n// class Item extends React.Component { /* For some reason, the React.Component\n// isn't recognized... */\n//     render() {\n//         return <h3> I'm a class component!</h3>;\n//     }\n// }\n// Rendered like a function element in HTML\n//  root.render(<Item />)\n\n// passing a component to a function as a \"prop\". Treated as arguments, but passed to the component as attributes\n// Think of them like HTML element attributes\nfunction PropsToYou(props) {\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: [\"I am the color \", props.color, \" passed via properties!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n}\n\n/* I'm displayed if a button is clicked. Which one? Figure yout yourself ;) */\n_c = PropsToYou;\nfunction Confirmed() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Confirmed\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You clicked the button!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n/* I'm displayed waiting for the button is clicked. */\n_c2 = Confirmed;\nfunction Waiting() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"waiting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n/* my contents changed if a button is clicked */\n_c3 = Waiting;\nfunction ConditionalTest() {\n  /* But I can also use the ? operator inside JSX elements too */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isClicked ? /*#__PURE__*/_jsxDEV(Confirmed, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Waiting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n// Can use conditionals to display things conditionally\n// can display lists by using the map() function\n_c4 = ConditionalTest;\nfunction ItemList({\n  things,\n  emptyHeading\n}) {\n  const count = things.length;\n  let heading = emptyHeading;\n  if (count > 0) {\n    const noun = count > 1 ? 'Things:' : 'Thing:';\n    heading = count + ' ' + noun;\n  }\n  /* Any arrow functions => {} REQUIRE a return statement, since it implies more than one line of code\n  * Otherwise, one line is implicit and does not NEED a return\n  */\n  /* This list.map() with the arrow function is a cool way to iterate through lists. Probably good for JSON stuff too! */\n  /* how I can filter complex lists:\n   *  \u001blist.filter(item => item.subItem == \"match\")\n   *\n   * - Must specify a unique key if I want to refer to elements\n   *   - This benefits because orders of list, items to be listed, etc. is assumed random\n   *   - keys must be unique, non-changing\n   *   - key items aren't typically props. Must be passed as a seperate prop:\n   *     <Profile key={id} userID={id} />\n   *\n   */\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: things.map(thing => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: thing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n_c5 = ItemList;\nfunction App() {\n  /* I can use conditionals to load different elements! */\n  /* Cannot define components inside other components */\n  let content;\n  let list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]; /* Passed to ItemList Component */\n  // Using an arrow function to handle a React event that is clicking a button\n  const toggle = a => {\n    alert(a);\n    if (isClicked) {\n      isClicked = false;\n    } else {\n      isClicked = true;\n    }\n  };\n  if (isClicked) {\n    content = /*#__PURE__*/_jsxDEV(Confirmed, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }, this);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(Waiting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"AppNav\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"NavLink\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://reactjs.org\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Learn React\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://www.w3schools.com/REACT/react_getstarted.asp\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"W3 schools\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => toggle(\"You clicked me!\"),\n            children: \"Click me!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buffer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      className: \"AppContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to JumpStart!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"It does nothing right now. Enjoy this spinning icon!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PropsToYou, {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Here's me demoing a conditional by using a JS insert and logical AND. I guess it prints the output of isClicked when not displaying \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Confirmed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 152\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isClicked && /*#__PURE__*/_jsxDEV(Confirmed, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"And here's me using element \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"ConditionalTest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 48\n        }, this), \" to show off ternary operators\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ConditionalTest, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"And here's using a variable \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 48\n        }, this), \" assigned to an element based on a conditional defined earlier.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"All of thse examples suck and are buggy. The first one does actually toggle, but then breaks after reloading the page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n}\n\n// I can only call functions declared here IN here. If I try importing any outside the one function designated to be exported, it treats that as if I just call the exported function again.\n_c6 = App;\nexport default App; /* Only ONE can be exported */\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PropsToYou\");\n$RefreshReg$(_c2, \"Confirmed\");\n$RefreshReg$(_c3, \"Waiting\");\n$RefreshReg$(_c4, \"ConditionalTest\");\n$RefreshReg$(_c5, \"ItemList\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["logo","jsxDEV","_jsxDEV","Fragment","_Fragment","isClicked","PropsToYou","props","children","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","Confirmed","className","_c2","Waiting","_c3","ConditionalTest","_c4","ItemList","things","emptyHeading","count","length","heading","noun","map","thing","_c5","App","content","list","toggle","a","alert","href","target","rel","onClick","event","src","alt","_c6","$RefreshReg$"],"sources":["/home/sdj81/ReactWorkspace/react_demo/src/App.js"],"sourcesContent":["import logo from './images/uno_O.png';\nimport './App.css';\nimport './MyCustom.css';\n\n/* Me playing around with a react elemnt */\n\nlet isClicked = false; /* Globally declaring boolean so all functions can view it */\n/* FIX: Button feature STILL DOESNT WORK */\n\n/*\n * NOTE:\n * - Hooks\n *   1. can ONLY be called in React function components\n *   2. can ONLY be called @ top level of said component\n *   3. can NOT be conditional\n */\n\n\n\n// Class component can be used to create custom React elements that inheriet \n// the React Component interface and respective functions\n// Much more complex, but I think it'S worth exploring. TODO?\n//\n// Could be how we manage posts appearing for searches, with individual posts\n// their own class component\n// ...or just develop multiple functions with properties and classes for the data\n// FE post\n\n// class Item extends React.Component { /* For some reason, the React.Component\n// isn't recognized... */\n//     render() {\n//         return <h3> I'm a class component!</h3>;\n//     }\n// }\n// Rendered like a function element in HTML\n//  root.render(<Item />)\n\n// passing a component to a function as a \"prop\". Treated as arguments, but passed to the component as attributes\n// Think of them like HTML element attributes\nfunction PropsToYou(props) {\n    return <h3>I am the color {props.color} passed via properties!</h3>\n}\n\n/* I'm displayed if a button is clicked. Which one? Figure yout yourself ;) */\nfunction Confirmed() {\n    return (\n        <>\n            <div className=\"Confirmed\">\n                <h2>You clicked the button!</h2>\n            </div>\n        </>\n    )\n}\n\n/* I'm displayed waiting for the button is clicked. */\nfunction Waiting() {\n    return (\n        <>\n            <p>waiting...</p>\n        </>\n    )\n}\n\n/* my contents changed if a button is clicked */\nfunction ConditionalTest() {\n    /* But I can also use the ? operator inside JSX elements too */\n    return (\n        <div>\n            {isClicked ? (\n                <Confirmed />\n            ) : (\n                    <Waiting />\n                )\n            }\n        </div>\n    )\n}\n\n// Can use conditionals to display things conditionally\n// can display lists by using the map() function\n\nfunction ItemList({things, emptyHeading}) {\n    const count = things.length;\n    let heading = emptyHeading;\n    if (count > 0) {\n        const noun = count > 1 ? 'Things:' : 'Thing:';\n        heading = count + ' ' + noun;\n    }\n    /* Any arrow functions => {} REQUIRE a return statement, since it implies more than one line of code\n    * Otherwise, one line is implicit and does not NEED a return\n    */\n    /* This list.map() with the arrow function is a cool way to iterate through lists. Probably good for JSON stuff too! */\n    /* how I can filter complex lists:\n     *  \u001blist.filter(item => item.subItem == \"match\")\n     *\n     * - Must specify a unique key if I want to refer to elements\n     *   - This benefits because orders of list, items to be listed, etc. is assumed random\n     *   - keys must be unique, non-changing\n     *   - key items aren't typically props. Must be passed as a seperate prop:\n     *     <Profile key={id} userID={id} />\n     *\n     */\n    return (\n        <section>\n            <h2>{heading}</h2>\n            <ol>\n                {things.map(thing => \n                    <li>{thing}</li>\n                )}\n            </ol>\n        </section>\n    );\n}\n\n\n\nfunction App() {\n    /* I can use conditionals to load different elements! */\n    /* Cannot define components inside other components */\n    let content;\n\n    let list = [1,2,3,4,5,6,7,8,9,10]; /* Passed to ItemList Component */\n   // Using an arrow function to handle a React event that is clicking a button\n    const toggle = (a) => {\n        alert(a);\n        if (isClicked) {\n            isClicked = false;\n        } else {\n            isClicked = true;\n        }\n    }\n    if (isClicked) {\n        content = <Confirmed />\n    } else {\n        content = <Waiting />\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n\n            <nav className=\"AppNav\">\n                <div className=\"NavLink\">\n                    <a \n                        href=\"https://reactjs.org\"\n                       target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        <button>Learn React</button> \n                    </a>\n                    <a\n                        href=\"https://www.w3schools.com/REACT/react_getstarted.asp\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        <button>W3 schools</button> \n                    </a>\n\n                    <button onClick={(event) => toggle(\"You clicked me!\")}>Click me!</button>\n                </div>\n            </nav>\n\n            <div className=\"buffer\"></div>\n\n            </header>\n\n            <body className=\"AppContent\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n                <h1>Welcome to JumpStart!</h1>\n\n                <p>\n                    It does nothing right now. Enjoy this spinning icon!\n                </p>\n                \n                <PropsToYou color=\"green\" />\n\n                <p>Here's me demoing a conditional by using a JS insert and logical AND. I guess it prints the output of isClicked when not displaying <code>Confirmed</code>.</p>\n                <div>\n                    {isClicked && <Confirmed />}\n                </div>\n\n                <p>And here's me using element <code>ConditionalTest</code> to show off ternary operators</p>\n                <ConditionalTest />\n\n                <p>And here's using a variable <code>content</code> assigned to an element based on a conditional defined earlier.</p>\n                <p>All of thse examples suck and are buggy. The first one does actually toggle, but then breaks after reloading the page</p>\n                {content}\n            </body>\n        </div>\n    );\n}\n\n// I can only call functions declared here IN here. If I try importing any outside the one function designated to be exported, it treats that as if I just call the exported function again.\nexport default App; /* Only ONE can be exported */\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}