{"ast":null,"code":"var _jsxFileName = \"/home/sdj81/ReactWorkspace/react_demo/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport HeaderToo from './App';\nimport reportWebVitals from './reportWebVitals';\n\n/* Create root element that will render my JS modules in index.html */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n/* Custom HTML element */\nconst myFirstElement = /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \"A demo element\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 24\n}, this);\n\n/* Ayyy OOP! But in JS! */\nclass Guy {\n  constructor(name) {\n    this.brand = name; /* Yes. Joe is a brand. */\n  }\n  name() {\n    return \"My name is \" + this.brand;\n  }\n}\n\n// {joe.brand} is how I can insert JS data into HTML elements\nfunction Header() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"I am a header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"I am a React element written in \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"src/index.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 45\n      }, this), \" and inserted into the root.render() directly\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Check me out, I'm calling Joe's brand: \", joe.brand]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = Header;\nconst joe = new Guy(\"Joe\"); /* JS class declaration. Nothing new */\n\nroot.render(myFirstElement); /* Rendering my custom HTML header */\n/* Pre-packaged app from Facebook when starting a new project */\n// I customized some things like replacing the spinning icon, and changing background and text colors\n// Apparently I can't enter text into the element renders\n// notice: that the latest `root.render` call is what loads\n// also notice: HTML elements that are capitalized are React components\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 3\n}, this));\n\n// ### TODO\n// - Figure out how to include the JumpStart html\n//   - Either port the HTML over to a React app, use react app and integrate it\n//     into HTML, or what, just DO IT\n// \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","ReactDOM","App","HeaderToo","reportWebVitals","jsxDEV","_jsxDEV","Fragment","_Fragment","root","createRoot","document","getElementById","myFirstElement","children","fileName","_jsxFileName","lineNumber","columnNumber","Guy","constructor","name","brand","Header","joe","_c","render","StrictMode","$RefreshReg$"],"sources":["/home/sdj81/ReactWorkspace/react_demo/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport HeaderToo from './App';\nimport reportWebVitals from './reportWebVitals';\n\n/* Create root element that will render my JS modules in index.html */\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n/* Custom HTML element */\nconst myFirstElement = <h1>A demo element</h1>\n\n/* Ayyy OOP! But in JS! */\nclass Guy {\n    constructor(name) {\n        this.brand = name; /* Yes. Joe is a brand. */\n    }\n    name() {\n        return \"My name is \" + this.brand;\n    }\n}\n\n// {joe.brand} is how I can insert JS data into HTML elements\nfunction Header() {\n    return(\n    <>\n        <h1>I am a header</h1>\n        <p>\n            I am a React element written in <code>src/index.js</code> and inserted into the root.render() directly\n        </p>\n        <p>\n            Check me out, I'm calling Joe's brand: {joe.brand}\n        </p>\n    </>\n    )\n}\n\nconst joe = new Guy(\"Joe\"); /* JS class declaration. Nothing new */\n\nroot.render(myFirstElement); /* Rendering my custom HTML header */ \n/* Pre-packaged app from Facebook when starting a new project */\n// I customized some things like replacing the spinning icon, and changing background and text colors\n// Apparently I can't enter text into the element renders\n// notice: that the latest `root.render` call is what loads\n// also notice: HTML elements that are capitalized are React components\nroot.render(\n  <React.StrictMode>\n    <Header />\n    <App />\n  </React.StrictMode>\n);\n\n// ### TODO\n// - Figure out how to include the JumpStart html\n//   - Either port the HTML over to a React app, use react app and integrate it\n//     into HTML, or what, just DO IT\n// \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,SAAS,MAAM,OAAO;AAC7B,OAAOC,eAAe,MAAM,mBAAmB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,IAAI,GAAGR,QAAQ,CAACS,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;;AAEjE;AACA,MAAMC,cAAc,gBAAGP,OAAA;EAAAQ,QAAA,EAAI;AAAc;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAI,CAAC;;AAE9C;AACA,MAAMC,GAAG,CAAC;EACNC,WAAWA,CAACC,IAAI,EAAE;IACd,IAAI,CAACC,KAAK,GAAGD,IAAI,CAAC,CAAC;EACvB;EACAA,IAAIA,CAAA,EAAG;IACH,OAAO,aAAa,GAAG,IAAI,CAACC,KAAK;EACrC;AACJ;;AAEA;AACA,SAASC,MAAMA,CAAA,EAAG;EACd,oBACAjB,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACIR,OAAA;MAAAQ,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBZ,OAAA;MAAAQ,QAAA,GAAG,kCACiC,eAAAR,OAAA;QAAAQ,QAAA,EAAM;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,iDAC7D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJZ,OAAA;MAAAQ,QAAA,GAAG,yCACwC,EAACU,GAAG,CAACF,KAAK;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA,eACN,CAAC;AAEP;AAACO,EAAA,GAZQF,MAAM;AAcf,MAAMC,GAAG,GAAG,IAAIL,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;;AAE5BV,IAAI,CAACiB,MAAM,CAACb,cAAc,CAAC,CAAC,CAAC;AAC7B;AACA;AACA;AACA;AACA;AACAJ,IAAI,CAACiB,MAAM,cACTpB,OAAA,CAACN,KAAK,CAAC2B,UAAU;EAAAb,QAAA,gBACfR,OAAA,CAACiB,MAAM;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACVZ,OAAA,CAACJ,GAAG;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAd,eAAe,CAAC,CAAC;AAAC,IAAAqB,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}