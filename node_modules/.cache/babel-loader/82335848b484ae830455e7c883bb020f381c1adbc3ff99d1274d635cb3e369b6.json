{"ast":null,"code":"var _jsxFileName = \"/home/sdj81/ReactWorkspace/react_demo/src/TODO.js\";\nimport './MyCustom.css';\nimport { tasks } from './tasks.js';\n/*\n * TODO:\n * - Build TODO Component\n * - Re-fromat what I have Into the following structure:\n *\n *     <Navigation /> \n *     <TODO />\n *\n *     <App />\n *       <Intro /> \n *       <Search />\n *       <Post />\n *       <Results />\n *\n *     <Footer />\n *       <AboutUs />\n *       <ContactUs />\n *\n * - Build Search and Post demo\n *   - Basically, whatever's entered gets re-printed to screen in Results component\n * - Figure out how to structure data that will be searched, related, and stored\n *   - SQL???\n *   - data.js??\n *\n * - What about a utils.js?\n *\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Todo() {\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: task.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Author-Bits\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TODO:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Currently a small list of functional and UI stuff to get our website working\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: taskList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["tasks","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","taskList","map","task","children","name","fileName","_jsxFileName","lineNumber","columnNumber","desc","className","_c","$RefreshReg$"],"sources":["/home/sdj81/ReactWorkspace/react_demo/src/TODO.js"],"sourcesContent":["import './MyCustom.css';\nimport {tasks} from './tasks.js'\n/*\n * TODO:\n * - Build TODO Component\n * - Re-fromat what I have Into the following structure:\n *\n *     <Navigation /> \n *     <TODO />\n *\n *     <App />\n *       <Intro /> \n *       <Search />\n *       <Post />\n *       <Results />\n *\n *     <Footer />\n *       <AboutUs />\n *       <ContactUs />\n *\n * - Build Search and Post demo\n *   - Basically, whatever's entered gets re-printed to screen in Results component\n * - Figure out how to structure data that will be searched, related, and stored\n *   - SQL???\n *   - data.js??\n *\n * - What about a utils.js?\n *\n */\n\n\nexport default function Todo() {\n    const taskList = tasks.map(task =>\n        <li>\n            <b>{task.name}</b>\n            <p>{task.desc}</p>\n        </li>\n    )\n    return (\n        <>\n            <section className=\"Author-Bits\">\n                <h1>TODO:</h1>\n                <p>Currently a small list of functional and UI stuff to get our website working</p>\n                <ul>\n                    {taskList}\n                </ul>\n            </section>\n        </>\n    )\n}\n\n"],"mappings":";AAAA,OAAO,gBAAgB;AACvB,SAAQA,KAAK,QAAO,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AA6BA,eAAe,SAASC,IAAIA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAGN,KAAK,CAACO,GAAG,CAACC,IAAI,iBAC3BN,OAAA;IAAAO,QAAA,gBACIP,OAAA;MAAAO,QAAA,EAAID,IAAI,CAACE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBZ,OAAA;MAAAO,QAAA,EAAID,IAAI,CAACO;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CACR,CAAC;EACD,oBACIZ,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACIP,OAAA;MAASc,SAAS,EAAC,aAAa;MAAAP,QAAA,gBAC5BP,OAAA;QAAAO,QAAA,EAAI;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdZ,OAAA;QAAAO,QAAA,EAAG;MAA4E;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACnFZ,OAAA;QAAAO,QAAA,EACKH;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBACZ,CAAC;AAEX;AAACG,EAAA,GAlBuBZ,IAAI;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}