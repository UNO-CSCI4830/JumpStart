{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fritz\\\\Desktop\\\\JumpStart\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport './MyCustom.css';\nimport App from './App';\nimport Todo from './TODO.js';\nimport Footer from './Footer.js';\nimport NavBar from './Header.js';\nimport reportWebVitals from './reportWebVitals';\n\n/* Create root element that will render my JS modules in index.html */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n/* Custom HTML element */\nconst myFirstElement = /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \"A demo element\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 24\n}, this);\n\n/* Ayyy OOP! But in JS! */\nclass Guy {\n  constructor(name) {\n    this.pfpURL = \"%PUBLIC_URL%/images/and-den-im-GETTIN_MAD.png\";\n    this.brand = name; /* Yes. Joe is a brand. */\n  }\n  name() {\n    return \"My name is \" + this.brand;\n  }\n  pfp() {\n    return this.pfpURL;\n  }\n}\n\n// {joe.brand} is how I can insert JS data into HTML elements\n\nconst joe = new Guy(\"Joe\"); /* JS class declaration. Nothing new */\n\n/* Root nodes are HTML elements where I want to display the result */\nroot.render(myFirstElement); /* Rendering my custom HTML header. Under whatever name I like */\n/* Apparently I can't enter text into the element renders\r\n* notice: that the latest `root.render` call is what loads\r\n* also notice: HTML elements that are capitalized are React components\r\n*/\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(\"body\", {\n    className: \"Global-Dark\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buffer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buffer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 5\n}, this));\n\n// ### TODO\n// - Figure out how to include the JumpStart html\n//   - Translate jumpstart1.html submission/search features into React components!\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","Todo","Footer","NavBar","reportWebVitals","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","myFirstElement","children","fileName","_jsxFileName","lineNumber","columnNumber","Guy","constructor","name","pfpURL","brand","pfp","joe","render","StrictMode","className"],"sources":["C:/Users/fritz/Desktop/JumpStart/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport './MyCustom.css';\r\nimport App from './App';\r\nimport Todo from './TODO.js';\r\nimport Footer from './Footer.js';\r\nimport NavBar from './Header.js';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n/* Create root element that will render my JS modules in index.html */\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\n\r\n/* Custom HTML element */\r\nconst myFirstElement = <h1>A demo element</h1>\r\n\r\n/* Ayyy OOP! But in JS! */\r\nclass Guy {\r\n    pfpURL = \"%PUBLIC_URL%/images/and-den-im-GETTIN_MAD.png\";\r\n    constructor(name) {\r\n        this.brand = name; /* Yes. Joe is a brand. */\r\n    }\r\n    name() {\r\n        return \"My name is \" + this.brand;\r\n    }\r\n    pfp() {\r\n        return this.pfpURL;\r\n    }\r\n}\r\n\r\n// {joe.brand} is how I can insert JS data into HTML elements\r\n\r\nconst joe = new Guy(\"Joe\"); /* JS class declaration. Nothing new */\r\n\r\n\r\n/* Root nodes are HTML elements where I want to display the result */\r\nroot.render(myFirstElement); /* Rendering my custom HTML header. Under whatever name I like */ \r\n /* Apparently I can't enter text into the element renders\r\n * notice: that the latest `root.render` call is what loads\r\n * also notice: HTML elements that are capitalized are React components\r\n */\r\nroot.render(\r\n    <React.StrictMode>\r\n\r\n        <body className=\"Global-Dark\">\r\n\r\n            <header>\r\n                <NavBar />\r\n            </header>\r\n\r\n            <div className=\"buffer\" />\r\n\r\n            <App />\r\n\r\n            <div className=\"buffer\" />\r\n\r\n            <footer>\r\n                <Footer />\r\n            </footer>\r\n\r\n        </body>\r\n\r\n    </React.StrictMode>\r\n);\r\n\r\n// ### TODO\r\n// - Figure out how to include the JumpStart html\r\n//   - Translate jumpstart1.html submission/search features into React components!\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAO,gBAAgB;AACvB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,eAAe,MAAM,mBAAmB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAGR,QAAQ,CAACS,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;;AAEjE;AACA,MAAMC,cAAc,gBAAGL,OAAA;EAAAM,QAAA,EAAI;AAAc;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAI,CAAC;;AAE9C;AACA,MAAMC,GAAG,CAAC;EAENC,WAAWA,CAACC,IAAI,EAAE;IAAA,KADlBC,MAAM,GAAG,+CAA+C;IAEpD,IAAI,CAACC,KAAK,GAAGF,IAAI,CAAC,CAAC;EACvB;EACAA,IAAIA,CAAA,EAAG;IACH,OAAO,aAAa,GAAG,IAAI,CAACE,KAAK;EACrC;EACAC,GAAGA,CAAA,EAAG;IACF,OAAO,IAAI,CAACF,MAAM;EACtB;AACJ;;AAEA;;AAEA,MAAMG,GAAG,GAAG,IAAIN,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;;AAG5B;AACAV,IAAI,CAACiB,MAAM,CAACb,cAAc,CAAC,CAAC,CAAC;AAC5B;AACD;AACA;AACA;AACAJ,IAAI,CAACiB,MAAM,cACPlB,OAAA,CAACR,KAAK,CAAC2B,UAAU;EAAAb,QAAA,eAEbN,OAAA;IAAMoB,SAAS,EAAC,aAAa;IAAAd,QAAA,gBAEzBN,OAAA;MAAAM,QAAA,eACIN,OAAA,CAACH,MAAM;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAETV,OAAA;MAAKoB,SAAS,EAAC;IAAQ;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE1BV,OAAA,CAACN,GAAG;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEPV,OAAA;MAAKoB,SAAS,EAAC;IAAQ;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE1BV,OAAA;MAAAM,QAAA,eACIN,OAAA,CAACJ,MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEP;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAEO,CACtB,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACAZ,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}